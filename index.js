/* empty css                      */import{S as $,i as n,a as q}from"./assets/vendor-D73Uttp0.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))i(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function o(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerPolicy&&(s.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?s.credentials="include":t.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(t){if(t.ep)return;t.ep=!0;const s=o(t);fetch(t.href,s)}})();const P="6021301-359a47a130e708641e07d8eef",w=document.getElementById("search-form"),x=document.getElementById("searchbox"),u=document.querySelector(".fetch-button"),p=document.querySelector(".loader"),m=document.querySelector(".loader-alt"),d=document.querySelector(".portfolio-list");let h="",f="",l=1,g=20;x.addEventListener("input",r=>{h=r.target.value.trim()});const I=new $(".list-item-sp a",{scrollZoom:!1,captionsData:"alt",captionDelay:250}),O=()=>{l=1;const r=document.querySelectorAll(".list-item-sp");r.length>0&&r.forEach(e=>{e.remove()})},y=r=>{r<=g*l&&n.error({title:"Error",message:"We are sorry, but you have reached the end of search results.!"}),l++},c=()=>{p.classList.add("hidden"),m.classList.add("hidden")};w.addEventListener("submit",r=>{r.preventDefault(),h.length>1?(O(),p.classList.remove("hidden"),f=h.replaceAll(" ","+"),v().then(e=>{c(),e.hits.length>0?(y(e.totalHits),L(e.hits,!0)):n.error({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!"})}).catch(e=>{c(),console.log(e)})):n.error({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!"})});u.addEventListener("click",r=>{r.preventDefault(),m.classList.remove("hidden"),u.classList.add("hidden"),v().then(e=>{c(),e.hits.length>0?(y(e.totalHits),L(e.hits)):n.error({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!"})}).catch(e=>{c(),console.log(e)})});const v=async()=>(await q.get(`https://pixabay.com/api/?key=${P}&q=${f}&image_type=photo&orientation=horizontal&safesearch=true&per_page=${g}&page=${l}`)).data;function L(r,e=!1){const o=r.map(({previewURL:i,largeImageURL:t,tags:s,likes:a,views:b,comments:S,downloads:E})=>`<li class="list-item-sp"><a class="link" href="${t}"><div class="card-image"><img src="${i}" alt="${s}" width="360" height="300"/></div><div class="info-data"><ul class="list details-list"><li class="image-detail"><span>Likes</span><br><span>${a}</span></li><li class="image-detail"><span>Comments</span><br><span>${S}</span></li><li class="image-detail"><span>Views</span><br><span>${b}</span></li><li class="image-detail"><span>Downloads</span><br><span>${E}</span></div></li></ul></div></a></li>`).join("");e?d.innerHTML=o:d.insertAdjacentHTML("beforeend",o),I.refresh(),u.classList.remove("hidden"),window.scrollTo(0,d.getBoundingClientRect().height)}
//# sourceMappingURL=index.js.map
